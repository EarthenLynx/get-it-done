# This document is used to describe the user path.
# It contains the data schema, as well as the endpoints
# It should be changed whenever the returned structure changes as well.
components:
  schemas:
    Information:
      type: object
      properties:
        informationId:
          type: string
          description: The auto-generated uuid of the information item.
          example: "879127udh12f23"
        userId:
          type: string
          description: The uuid of the user who owns the item.
          example: "f1298fh2378f2"
        title:
          type: string
          description: Title of the information item.
          example: "Hex and rgb colors"
        description:
          type: string
          description: The information item's content in markdown.
          example: "# Hex and rbg colors \n Hex and rbg, in the world of html, are very similar. This is how ..."
        created:
          type: date
          description: Moment.js timestamp of when the information item has been created.
          example: "Moment<2020-12-21T13:01:42+01:00>"
        changed:
          type: date
          description: Moment.js timestamp of when information item has been changed last.
          example: "Moment<2020-12-21T13:01:42+01:00>"

# Tag
tags:
  name: Information
  description: Primary resource. Informaiton items are not related to any action or appointment, but include knowledge for a later usage.

# Information endpoint: No params
/api/v1/information:
  post:
    summary: Creates a new information item. The userId property is taken from the user's json webtoken, the timestamps are created automatically
    operationId: handleCreateInformation
    tags: [Information]
    consumes:
      - application/json
    produces:
      - application/json
    requestBody:
      description: Creates a new information item. If other parameters from the information model are provided, they will be overwritten
      required: true,
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
                description: Title of the information item.
                example: "Hex and rgb colors"
              description:
                type: string
                description: The information item's content in markdown.
                example: "# Hex and rbg colors \n Hex and rbg, in the world of html, are very similar. This is how ..."
    responses:
      200:
        description: Returns the created information item
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Information"
      500:
        description: Returns an object describing the unexpected server error that occured
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InternalErrorException"

# Information endpoint: User ID path
api/v1/information/{userId}:
  get:
    summary: Returns an array of all information items for a specific user. userId defaults to the userId extracted from the json webtoken.
    operationId: handleGetInformationByUserId
    tags: [Information]
    parameters:
      - in: path
        name: userId
        schema:
          type: string
        required: false
        description: Unique ID of the user for which information items should be returned. If it differs from the userId in the json webtoken, it will be overwritten.
      - in: query
        name: q
        schema:
          type: string
        required: false
        description: Query the title and description for a specific substring. If it appears in one of these, it will be part of the returned array.
    produces:
      - application/json
    responses:
      200:
        description: Returns an `array` including the information items.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Information"
      404:
        description: Returns an `object`` describing that no items could be returned ( e.g. empty array returned by controller )
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotFoundException"
      500:
        description: Returns an `object` describing the unexpected server error that occured
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InternalErrorException"

# Information endpoint: Information ID path
/api/v1/information/{informationId}:
  get:
    summary: Returns a single information item by its id
    operationId: handleGetInformationByInformationId
    tags: [Information]
    parameters:
      - in: path
        name: informationId
        schema:
          type: string
        required: true
        description: Unique ID of the information item which should be returned
    produces:
      - application/json
    responses:
      200:
        description: Returns an `object` describing the requested information item.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Information"
      404:
        description: Returns an `object` describing that the information item was not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotFoundException"
      500:
        description: Returns an `object` describing the unexpected server error that occured
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InternalErrorException"
  put:
    summary: Update a single information item by its id
    operationId: handleUpdateInformationByInformationId
    tags: [Information]
    parameters:
      - in: path
        name: informationId
        schema:
          type: string
        required: true
        description: Unique ID of the information item which should be updated
    consumes:
      - application/json
    produces:
      - application/json
    requestBody:
      description: Minimum information to update an information item.
      required: true,
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
                description: Title of the information item.
                example: "Hex and rgb colors"
              description:
                type: string
                description: The information item's content in markdown.
                example: "# Hex and rbg colors \n ## New stuff \n  Hex and rbg, in the world of html, are very similar. This is how ..."
    responses:
      200:
        description: Returns an `object` representing the updated information item
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Information"
      404:
        description: Returns an `object` describing that the information item was not found.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotFoundException"
      500:
        description: Returns an `object` describing the unexpected server error that occured
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InternalErrorException"
  delete:
    summary: Delete a single information item by its id
    operationId: handleDeleteInformationByInformationId
    tags: [Information]
    parameters:
      - in: path
        name: informationId
        schema:
          type: string
        required: true
        description: Unique ID of the information item which should be deleted
    produces:
      - application/json
    responses:
      204:
        description: Returns an empty `string` with status code 204 'no content'
      404:
        description: Returns an `object` describing that the information item was not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotFoundException"
      500:
        description: Returns an `object` describing the unexpected server error that occured
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InternalErrorException"
